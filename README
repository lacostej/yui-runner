YUI runner is a small framework to automate the running of Yahoo! UI tests, and collect their results.

It for example allows to run browser specific JS tests using e.g. selenium in a deployed browser.
It can also be used to easily debug server side tests from your development environment, or even in production environments.

See the yui-runner-example project for a complete setup.

The framework provides:
* a special JUnit runner (YUIJunitTestRunner) which one attaches to a subclass of its companion class (YUITest)
* a report collector servlet which collects reports published by the YUI test report publishing code

As a developer your job consists of writing a subclass of the YUITest class and make it
 * find the URLs of the tests to run
 * set the environment up for running the tests (e.g. starts and stops jetty if necessary)
 * prepare the browser and load the pages (e.g. with selenium)

An example project shows how to combine maven, jetty, selenium and firefox to automate the running of tests embedded in HTML pages.

Some limitations
* the code is written in Scala. Might be better to rewrite it in Java to ease adoption by other projects
* the API could probably be improved.
* one might want to use a different paradigm (i.e. non self tested HTML pages) for running the tests
* note aggregation of the saved YUI reports under target/surefire-reports by hudson is untested... FIXME

Some advantages
* self-contained
* works the same from your editor (eclipse, Intellij) or maven or hudson
* should benefit from the surefire reporting capabilities in maven (and hudson)

Feedback to jerome.lacoste@gmail.com